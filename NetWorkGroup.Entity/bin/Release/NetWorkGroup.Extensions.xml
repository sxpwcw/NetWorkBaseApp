<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetWorkGroup.Extensions</name>
    </assembly>
    <members>
        <member name="T:System.NetWorkGroupExtensions">
            <summary>
            公用扩展类
            </summary>
        </member>
        <member name="M:System.NetWorkGroupExtensions.To``1(System.IConvertible)">
            <summary>
            执行转换，常应用在枚举转换
            </summary>
            <typeparam name="TOutput">输出类型</typeparam>
            <param name="obj1">实现了IConvertible的类型</param>
            <returns>转换后的类型</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.As``1(System.Object)">
            <summary>
            将任意引用类型转换为指定的引用类型
            </summary>
            <typeparam name="T">转换的结果类型</typeparam>
            <param name="obj">任意类型</param>
            <returns></returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.OutDotText(System.String,System.Int32)">
            <summary>
            根据长度截取指定的字符串，并将结果输出多出部分用省略号代替
            </summary>
            <param name="Text">带截取的文本</param>
            <param name="Length">长度</param>
            <returns>返回切除后的结果</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.IsNull``1(``0)">
            <summary>
            判断任意类型是否是Null 
            </summary>
            <typeparam name="T">任意类型</typeparam>
            <param name="obj">任意类型</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.IsNotNull``1(``0)">
            <summary>
            判断任意类型是否不是Null 
            </summary>
            <typeparam name="T">任意类型</typeparam>
            <param name="obj">任意类型</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.CopyObjectProperty``1(``0,``0)">
            <summary>
            将制定类型的属性复制到选定的类型 
            </summary>
            <typeparam name="T">任意引用类型</typeparam>
            <param name="tSource">要复制的类型的实例</param>
            <param name="tDestination">要复制的目标类型的实例</param>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ToStringTrim``1(``0)">
            <summary>
            将输入的字符串输出为ToString().Trim()的字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">任意类型的数据</param>
            <returns>返回的字符串</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ToMd5(System.String)">
            <summary>
            将字符串转换为MD5加密
            </summary>
            <param name="_Str">待转换的字符串类型</param>
            <returns></returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ToWeekday(System.DateTime)">
            <summary>
            根据当前的日期获取星期几
            </summary>
            <param name="datetime">当前日期</param>
            <returns></returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ToInt64``1(``0)">
            <summary>
            将任意类型转换为为ToInt64
            <para>为Boolean时，True返回1，False返回0</para>
            <para>若待转换的类型原本为ToInt64那么直接返回</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ToInt32``1(``0)">
            <summary>
            将任意类型转换为为Int32 
            <para>为Boolean时，True返回1，False返回0</para>
            <para>若待转换的类型原本为Int32那么直接返回</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="o">任意类型数据</param>
            <returns>Int32</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ToDouble``1(``0)">
            <summary>
            将任意类型转换为为Double 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="o">任意对象</param>
            <returns>Double</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ToList``1(System.Data.DataTable)">
            <summary>
            将DataTable转换为实体属性类的集合
            </summary>
            <typeparam name="T">任意实体类</typeparam>
            <param name="dt">数据表</param>
            <returns>List&lt;T&gt;</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ToDateTime``1(``0)">
            <summary>
            将任意类型转换为DateTime 
            </summary>
            <typeparam name="T">任意类型</typeparam>
            <param name="obj">任意类型</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.AsArray``1(System.Collections.ICollection)">
            <summary>
            将指定的集合类转换为指定类型的数组
            </summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="items">集合类列表</param>
            <returns>T[]</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ClearHtml(System.String)">
            <summary>
            根据正则表达式将字符串中的HTML标签过滤并获取纯文本说明
            </summary>
            <param name="Content">要截取的字符串</param>
            <returns>返回正则匹配过的所有数据</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.MakeBlank(System.Int32)">
            <summary>
            生成树的时候添加树标示
            </summary>
            <param name="num">个数</param>
            <returns>字符串</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ShowSelectListItemByTree``2(System.Linq.IQueryable{``0})">
            <summary>
            用于生成一个树形的DropDownList选择项
            </summary>
            <typeparam name="T">实现了IModelDropDown&lt;T&gt;的类型</typeparam>
            <typeparam name="TType">表示主接口IModelID&lt;T&gt;的名称为Name的类型</typeparam>
            <param name="Data">IQueryable&lt;T&gt;数据</param>
            <returns>IEnumerable&lt;SelectListItem&gt;</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ScalingImage``1(``0,System.Web.HttpServerUtilityBase,System.Int32,System.Int32)">
            <summary>
            将图片按照指定的宽高度截取并输出
            </summary>
        </member>
        <member name="M:System.NetWorkGroupExtensions.SetMemoryStreamValue(System.IO.Stream)">
            <summary>
            将文件流转化为内存流
            </summary>
            <param name="fs">带转化的文件流</param>
            <returns>转化后的内存流</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.GetNewFileNameByWidthAndHeight(System.IO.FileInfo,System.Int32,System.Int32)">
            <summary>
            根据指定的宽度和高度获取新的文件名
            </summary>
            <param name="f">表示一个System.IO.FileInfo对象</param>
            <param name="Width">文件的宽度</param>
            <param name="Height">文件的高度</param>
            <returns>返回新的文件名</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ScalingImage``1(``0,System.Boolean,System.Web.HttpServerUtilityBase,System.Int32,System.Int32)">
            <summary>
            将图片按照指定的宽高度截取并输出
            </summary>
            <param name="byWidth">是否是根据宽度等比缩放，如果此项为False则按照高度缩放</param>
            <param name="model">实现了IModelImageUrl的类型</param>
            <param name="Height">指定截取后的图片高度</param>
            <param name="Server">HttpServerUtilityBase对象用以查找服务器端指定的路径</param>
            <param name="Width">指定截取后的图片宽度</param>
            <returns>MemoryStream</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.Pager``1(System.Web.Mvc.HtmlHelper,System.PagerOptions{``0})">
            <summary>
            分页扩展方法
            </summary>
            <typeparam name="T">任意类型</typeparam>
            <param name="helper">HtmlHelper</param>
            <param name="pagerOptions">分页配置程序</param>
            <returns>分页代码</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.PagerDialog``1(System.Web.Mvc.HtmlHelper,System.PagerOptions{``0})">
            <summary>
            分页扩展方法用于模态对话框
            </summary>
            <typeparam name="T">任意类型</typeparam>
            <param name="helper">HtmlHelper</param>
            <param name="pagerOptions">分页配置程序</param>
            <returns>分页代码</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ReplaceEx(System.String,System.String,System.String)">
            <summary>
            根据模板将keywords值替换所选择字符转中的数据
            </summary>
            <param name="str">目标字符串</param>
            <param name="keywords">替换字符串</param>
            <param name="replaceTemplate">HTML模板</param>
            <returns>String</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ReplaceExRedFont(System.String,System.String)">
            <summary>
            根据keywords值替换所选择字符转中的数据使用红色关键字作为模板
            </summary>
            <param name="str">目标字符串</param>
            <param name="keywords">替换字符串</param>
            <returns>String</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ReplaceExBold(System.String,System.String)">
            <summary>
            根据keywords值替换所选择字符转中的数据使用粗体字关键字作为模板
            </summary>
            <param name="str">目标字符串</param>
            <param name="keywords">替换字符串</param>
            <returns>String</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.ReplaceExItalic(System.String,System.String)">
            <summary>
            根据keywords值替换所选择字符转中的数据使用斜体字关键字作为模板
            </summary>
            <param name="str">目标字符串</param>
            <param name="keywords">替换字符串</param>
            <returns>String</returns>
        </member>
        <member name="M:System.NetWorkGroupExtensions.GetArticle``3(System.Linq.IQueryable{``0},``1,System.Linq.IQueryable{``1},System.Collections.Generic.List{``0}@)">
            <summary>
            根据指定的菜单信息，递归生成改菜单下所有子菜单中的文章
            </summary>
            <typeparam name="TArticle">实现了IModelParentID &lt;T &gt;的任意类</typeparam>
            <typeparam name="TArticleItem">实现了IModelParentID &lt;T &gt;的任意类</typeparam>
            <typeparam name="TType">表示文章所述的ID的类型</typeparam>
            <param name="obj">所有的文章信息</param>
            <param name="ParnetMenu">当前的父菜单</param>
            <param name="Menus">所有菜单</param>
            <param name="alloc">ref 结果</param>
        </member>
        <member name="T:System.PagerOptions`1">
            <summary>
            分页选项
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:System.PagerOptions`1.ItemCollection">
            <summary>
            需要分页的内容
            </summary>
        </member>
        <member name="P:System.PagerOptions`1.MaxRecord">
            <summary>
            获取或者设置一个值，该值表示最大记录数
            </summary>
        </member>
        <member name="P:System.PagerOptions`1.PageSize">
            <summary>
            每页记录条数，默认10页
            </summary>
        </member>
        <member name="P:System.PagerOptions`1.MorePage">
            <summary>
            获取或者设置一个值，该值表示最多显示几页
            </summary>
        </member>
        <member name="P:System.PagerOptions`1.PagerCssClass">
            <summary>
            获取或者设置一个值，该值表示Pager CSS 类名
            </summary>
        </member>
        <member name="T:NetWorkGroup.Extensions.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:NetWorkGroup.Extensions.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:NetWorkGroup.Extensions.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:NetWorkGroup.Extensions.Properties.Resources.NoImage">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="T:System.Web.UI.Extensions.WebExtensions">
            <summary>
            应用程序扩展，加入对WebForm的支持
            </summary>
        </member>
        <member name="M:System.Web.UI.Extensions.WebExtensions.ShowDropDownListItemByTreeWebFrom``2(System.Linq.IQueryable{``0},System.Web.UI.WebControls.DropDownList,System.String,System.String,System.Boolean)">
            <summary>
            递归生成树状DropDownList
            </summary>
            <typeparam name="T">需要显示的相关数据的集合，任意类型但需要实现IQueryable接口</typeparam>
            <typeparam name="TType">实现的类型在IDropDown接口中用于指定标识列的数据类型</typeparam>
            <param name="Data">需要显示的相关数据的集合，任意类型但需要实现IQueryable接口</param>
            <param name="EmptyItemDisplayText">空数据中显示的数据(要显示此数据需将IsAppendEmptyItem置为True)</param>
            <param name="EmptyValue">添加的空数据行中的数据(要使用此数据需将IsAppendEmptyItem置为True)</param>
            <param name="IsAppendEmptyItem">是否添加一个空行</param>
            <param name="DropDownList">绑定的DropDownList</param>
        </member>
        <member name="M:System.Web.UI.Extensions.WebExtensions.HtmlPager``1(System.Object,System.PagerOptions{``0})">
            <summary>
            分页扩展方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="helper"></param>
            <param name="pagerOptions"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.UI.Extensions.WebExtensions.Alert``1(System.String,``0,System.String,System.Boolean,System.Boolean)">
            <summary>
            想页面输出window.Alert对话框，并在输出完毕后执行扩展Script方法
            </summary>
            <typeparam name="T">输出的客户端类型</typeparam>
            <param name="Msg">对话框中显示的消息</param>
            <param name="obj">使用注册的客户端</param>
            <param name="InnerScript">对话框弹出后需要执行的Script代码</param>
            <param name="IsCreateOnlyKey">是否创建唯一的Key</param>
            <param name="IsAddScriptTag">是否添加Script脚本标签</param>
        </member>
        <member name="M:System.Web.UI.Extensions.WebExtensions.Confirm``1(System.String,``0,System.String,System.Boolean,System.Boolean)">
            <summary>
            想页面输出window.confirm对话框，当点击确定按钮后执行指定的js方法
            </summary>
            <typeparam name="T">输出的客户端类型</typeparam>
            <param name="Msg">对话框中显示的消息</param>
            <param name="obj">使用注册的客户端</param>
            <param name="InnerScript">对话框弹出后需要执行的Script代码</param>
            <param name="IsCreateOnlyKey">是否创建唯一的Key</param>
            <param name="IsAddScriptTag">是否添加Script脚本标签</param>
        </member>
        <member name="M:System.Web.UI.Extensions.WebExtensions.LocationHref``1(System.String,System.UriKind,``0,System.String,System.Boolean)">
            <summary>
            在页面中执行window.location方法，将页面跳转至指定的页面
            </summary>
            <typeparam name="T">输出的客户端类型</typeparam>
            <param name="Url">跳转的目标地址</param>
            <param name="UrlKind">URL类型</param>
            <param name="obj">使用注册的客户端</param>
            <param name="ParentName">指定页面跳转时的框架，可选</param>
            <param name="IsAddScriptTag">是否在页面中创建Script标签，可选</param>
        </member>
        <member name="M:System.Web.UI.Extensions.WebExtensions.InvokeJs``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            向页面中输出执行JS脚本的方法
            </summary>
            <typeparam name="T">输出的客户端类型</typeparam>
            <param name="js">需要执行的JS代码</param>
            <param name="obj">使用注册的客户端</param>
            <param name="IsCreateOnlyKey">指定页面跳转时的框架，可选</param>
            <param name="IsAddScriptTag">是否在页面中创建Script标签，可选</param>
        </member>
        <member name="M:System.Web.UI.Extensions.WebExtensions.ResolveUrl(System.String)">
            <summary>
            将相对URL进行转换
            </summary>
            <param name="relativeUrl">相对URL</param>
            <returns>绝对URL</returns>
        </member>
        <member name="M:System.Web.UI.Extensions.WebExtensions.AppendEmptyRowToDropDownList(System.Web.UI.WebControls.ListControl,System.String,System.String)">
            <summary>
            增加一个空行至ListControl中
            </summary>
            <param name="control">ListControl</param>
            <param name="DisplayText">空行显示文本</param>
            <param name="DataValue">空行值</param>
        </member>
    </members>
</doc>
