<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetWorkGroup.Data</name>
    </assembly>
    <members>
        <member name="T:NetWorkGroup.Data.DBase">
            <summary>
            数据核心处理程序集抽象层
            </summary>
        </member>
        <member name="M:NetWorkGroup.Data.DBase.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:NetWorkGroup.Data.DBase.#ctor(NetWorkGroup.Data.DbConnectionString)">
            <summary>
            数据库连接字符串
            </summary>
            <param name="_ConnectionString">数据库连接参数对象</param>
        </member>
        <member name="F:NetWorkGroup.Data.DBase.Empty">
            <summary>
            表示没有任何数据的数据抽象类
            </summary>
        </member>
        <member name="M:NetWorkGroup.Data.DBase.Execute(System.Data.CommandType)">
            <summary>
            抽象方法，执行命令并返回int
            </summary>
            <param name="cmdType">执行类型</param>
            <returns>int</returns>
        </member>
        <member name="M:NetWorkGroup.Data.DBase.Execute``1(System.Data.CommandType)">
            <summary>
            抽象方法，执行命令并返回指定的类型
            </summary>
            <typeparam name="TResult">指定的类型</typeparam>
            <param name="cmdType">执行类型</param>
            <returns>泛型类型</returns>
        </member>
        <member name="M:NetWorkGroup.Data.DBase.SetOutputParameter(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            获取数据库输出参数
            </summary>
            <param name="outPutParams">输出参数</param>
        </member>
        <member name="M:NetWorkGroup.Data.DBase.AddNewParameter(System.String,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="Name">名称</param>
            <param name="Value">参数表示的值</param>
        </member>
        <member name="M:NetWorkGroup.Data.DBase.AddNewParameter``1(System.String,``0,System.Int32,System.Object,System.Data.ParameterDirection)">
            <summary>
            添加参数
            </summary>
            <typeparam name="TDbType">数据类型</typeparam>
            <param name="Name">名称</param>
            <param name="_DbType">参数数据类型枚举</param>
            <param name="Size">参数大小</param>
            <param name="Value">参数表示的值</param>
            <param name="direction">参数类型</param>
        </member>
        <member name="M:NetWorkGroup.Data.DBase.Dispose">
            <summary>
            释放任何使用过的资源
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DBase.ParamentCollections">
            <summary>
            获取或者设置一个值，该值表示数据库参数集合
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DBase.ConnectionString">
            <summary>
            获取或者设置一个值，该值表示数据库连接字符串类
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DBase.cmdText">
            <summary>
            获取或者设置一个值，该值表示要执行的数据库指令
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DBase.Connection">
            <summary>
            抽象属性，获取或者设置一个值，该值表示数据库连接对象，需要在继承类中重写
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DBase.DbOutPutValue">
            <summary>
            静态数据库输出参数，此属性为动态属性类型为：Dictionary&lt;String,dynamic&gt;
            </summary>
        </member>
        <member name="T:NetWorkGroup.Data.DBaseException">
            <summary>
            表示数据库处理层出现的异常
            </summary>
        </member>
        <member name="M:NetWorkGroup.Data.DBaseException.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:NetWorkGroup.Data.DBaseException.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="Msg">异常信息</param>
            <param name="_ErrorNumber">错误代码</param>
        </member>
        <member name="P:NetWorkGroup.Data.DBaseException.ErrorNumber">
            <summary>
            获取一个值，该值表示异常错误代码
            </summary>
        </member>
        <member name="T:NetWorkGroup.Data.DbConnectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="M:NetWorkGroup.Data.DbConnectionString.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="F:NetWorkGroup.Data.DbConnectionString.Empty">
            <summary>
            表示没有任何数据的连接类
            </summary>
        </member>
        <member name="M:NetWorkGroup.Data.DbConnectionString.Create(NetWorkGroup.Data.DataBaseType,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            根据参数创建DbConnectionString类的实例
            </summary>
            <param name="DbType">数据库类型</param>
            <param name="DataSource">数据源，或者IP地址</param>
            <param name="UserName">数据库登录账号</param>
            <param name="Password">数据库密码</param>
            <param name="DataBase">数据库名称</param>
            <param name="Port">数据库端口号</param>
            <param name="IsPooling">是否使用数据库连接池</param>
            <param name="EncodingName">字符编码集，默认UTF-8</param>
            <returns>数据库连接字符串类的实例</returns>
        </member>
        <member name="M:NetWorkGroup.Data.DbConnectionString.ToString">
            <summary>
            重写底层ToString输出连接字符串
            </summary>
            <returns>数据库连接字符串</returns>
        </member>
        <member name="P:NetWorkGroup.Data.DbConnectionString.DataSource">
            <summary>
            获取或者设置一个值，该值表示数据源
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DbConnectionString.UserID">
            <summary>
            获取或者设置一个值，该值表示数据库用户名
            <para>Access默认不带用用户名和密码</para>
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DbConnectionString.Password">
            <summary>
            获取或者设置一个值，该值表示数据库服务器密码
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DbConnectionString.DataBase">
            <summary>
            获取或者设置一个值，该值表示使用的数据库
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DbConnectionString.IsPooling">
            <summary>
            获取或者设置一个值，该值表示是否使用数据库连接池
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DbConnectionString.DbType">
            <summary>
            获取或者设置一个值，该值表示数据库类型
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DbConnectionString.Port">
            <summary>
            获取或者设置一个值，该值表示数据库服务器端口号
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DbConnectionString.EncodingName">
            <summary>
            获取或者设置一个值，该值表示数据库的默认字符集
            </summary>
        </member>
        <member name="T:NetWorkGroup.Data.DataBaseType">
            <summary>
            数据库类型枚举
            </summary>
        </member>
        <member name="F:NetWorkGroup.Data.DataBaseType.SqlServer">
            <summary>
            表示SqlServer数据库
            </summary>
        </member>
        <member name="F:NetWorkGroup.Data.DataBaseType.Oracle">
            <summary>
            表示Oracle数据库
            </summary>
        </member>
        <member name="F:NetWorkGroup.Data.DataBaseType.Access">
            <summary>
            表示Access数据库
            </summary>
        </member>
        <member name="F:NetWorkGroup.Data.DataBaseType.MySQL">
            <summary>
            表示MySQL数据库
            </summary>
        </member>
        <member name="F:NetWorkGroup.Data.DataBaseType.DB2">
            <summary>
            表示DB2数据库
            </summary>
        </member>
        <member name="F:NetWorkGroup.Data.DataBaseType.Unkown">
            <summary>
            表示未知的数据库
            </summary>
        </member>
        <member name="T:NetWorkGroup.Data.DbContext`1">
            <summary>
            为LINQ TO SQL 的自定义类型提供抽象基类
            </summary>
            <typeparam name="T">Model类</typeparam>
        </member>
        <member name="M:NetWorkGroup.Data.DbContext`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:NetWorkGroup.Data.DbContext`1.#ctor(System.Data.IDbConnection)">
            <summary>
            通过引用由 .NET Framework 使用的连接来初始化 System.Data.Linq.DataContext 类的新实例。
            </summary>
            <param name="connection">由 .NET Framework 使用的连接。</param>
        </member>
        <member name="M:NetWorkGroup.Data.DbContext`1.#ctor(System.String)">
            <summary>
            通过引用文件源来初始化 System.Data.Linq.DataContext 类的新实例。
            </summary>
            <param name="fileOrServerOrConnection">此参数可以是下列项之一： 
            <para>SQL Server Express 数据库所在的文件的名称。 数据库所在的服务器的名称。 在此情况下，提供程序对用户使用默认数据库。</para>
            <para>一个完整的连接字符串。 LINQ to SQL 仅将字符串传递给提供程序，而不进行修改。</para>
            </param>
        </member>
        <member name="M:NetWorkGroup.Data.DbContext`1.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)">
            <summary>
            通过引用连接和映射源初始化 System.Data.Linq.DataContext 类的新实例。
            </summary>
            <param name="connection">由 .NET Framework 使用的连接。</param>
            <param name="mapping">映射的源。</param>
        </member>
        <member name="M:NetWorkGroup.Data.DbContext`1.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
            <summary>
            通过引用文件源和映射源初始化 System.Data.Linq.DataContext 类的新实例。
            </summary>
            <param name="fileOrServerOrConnection">此参数可以是下列项之一： 
            <para>SQL Server Express 数据库所在的文件的名称。 数据库所在的服务器的名称。 在此情况下，提供程序对用户使用默认数据库。</para>
            <para>一个完整的连接字符串。 LINQ to SQL 仅将字符串传递给提供程序，而不进行修改。</para>
            </param>
            <param name="mapping">映射的源</param>
        </member>
        <member name="M:NetWorkGroup.Data.DbContext`1.SetBaseConnectionString(NetWorkGroup.Data.DbConnectionString)">
            <summary>
            虚方法，将新的数据库连接字符串应用在DataContext中
            </summary>
            <param name="ConnectionString">数据库连接字符串类</param>
        </member>
        <member name="P:NetWorkGroup.Data.DbContext`1.Model">
            <summary>
            在类中实现时用于获取或者设置Model层
            </summary>
        </member>
        <member name="P:NetWorkGroup.Data.DbContext`1.getTable">
            <summary>
            获取一个值，该值表示一个映射的实体表
            </summary>
        </member>
        <member name="T:NetWorkGroup.Data.SqlServer.SqlServerDb">
            <summary>
            SQL Server 数据库处理类
            </summary>
        </member>
        <member name="M:NetWorkGroup.Data.SqlServer.SqlServerDb.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:NetWorkGroup.Data.SqlServer.SqlServerDb.#ctor(NetWorkGroup.Data.DbConnectionString)">
            <summary>
            构造函数重载
            </summary>
            <param name="ConnectionString">数据库连接字符串类</param>
        </member>
        <member name="M:NetWorkGroup.Data.SqlServer.SqlServerDb.Execute(System.Data.CommandType)">
            <summary>
            在当前连接上执行查询操作，并将影像的行数返回
            </summary>
            <param name="cmdType">查询的类型</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:NetWorkGroup.Data.SqlServer.SqlServerDb.Execute``1(System.Data.CommandType)">
            <summary>
            在当前连接上执行查询操作，并将影像的行数返回
            </summary>
            <typeparam name="TResult">目前支持两种类型的返回数据,DataTable和DataSet</typeparam>
            <param name="cmdType">查询的类型</param>
            <returns>DataTable或DataSet</returns>
        </member>
        <member name="M:NetWorkGroup.Data.SqlServer.SqlServerDb.AddNewParameter(System.String,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="Name">名称</param>
            <param name="Value">参数表示的值</param>
        </member>
        <member name="M:NetWorkGroup.Data.SqlServer.SqlServerDb.AddNewParameter``1(System.String,``0,System.Int32,System.Object,System.Data.ParameterDirection)">
            <summary>
            添加参数
            </summary>
            <typeparam name="TDbType">数据类型</typeparam>
            <param name="Name">名称</param>
            <param name="_DbType">参数数据类型枚举</param>
            <param name="Size">参数大小</param>
            <param name="Value">参数表示的值</param>
            <param name="direction">参数类型</param>
        </member>
        <member name="P:NetWorkGroup.Data.SqlServer.SqlServerDb.Connection">
            <summary>
            获取或者设置一个值，该值表示数据库连接对象
            </summary>
        </member>
    </members>
</doc>
